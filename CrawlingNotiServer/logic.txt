[필요한 기능]
1. 웹 크롤링
	a. 셀레니움을 사용해서 동적 페이지를 원하는 상태로 세팅.
	b. jsoup을 사용해서 해당 페이지에서 원하는 정보를 크롤링.
	c. 최신 정보를 Redis에 업데이트하고 저장된 최신 공고 보다 위에 공고가 있다면 해당 공고는 알림을 보내기 위해 따로 저장.
	d. 마감공고 전까지 페이지를 넘기며 크롤링하여 전부 Redis에 저장한다.
2. 알림
	a. 백그라운드 스레드에서 일정 주기로 크롤링을 진행한다.
	b. 크롤링된 결과 중 최신 정보를 알림을 받겠다고 한 유저에게만 전송
	c. 최신 결과가 없다면 알림 전송 x -> 최신 정보가 없으면  tryEmitNext를 하지 않는다.
3. 조회 서버
	a. 각 사이트 정보를 저장해두고 요청에 맞는 데이터를 보내준다.

[구조]
1. 크롤링 & 알림 서버, 데이터 조회 서버
2. Redis 메모리 DB
3. 각 요청을 처리하는 NginX Gateway



1. 서버에서 셀레니움을 통해 크롤링할 웹으로 이동한다.
2. 해당 웹에서 지정된 설정 후 마감일이 지난 공고가 나올 때까지 크롤링을 진행한다.
3. 가져온 정보를 전부 Redis에 저장하고 각 페이지의 마지막 공고를 서버에서 가지고 있는다.
4. 크롤링 시 마지막 공고 이후에 새로운 공고가 있다면 해당 사이트의 해당 카테고리에 공지가 업로드 됐다는 알림을 준다.
5. 1~4번까지의 과정을 백그라운드 스레드를 사용해서 1시간에 한번 씩 반복한다.
6. 상태 등록을 통해 새로운 공고는 따로 표시?
7. 광고 배너 위치 고려

